syntax = "proto3";

package objstore;

import "google/protobuf/empty.proto";

/* Design questions
  - Do we want to be able to upload only part of an object
  - What are we doing for permissions / ACLs
  - What do we want to do for location, e.g., regions?
  - How do object versions work?
  - What concurrency models / consistency guarantees do we support
  - How are we encoding error codes? Can we use standard rRPC status (https://github.com/grpc/grpc/blob/master/doc/statuscodes.md)
*/


service ObjectStore {
    rpc createBucket (CreateBucketRequest) returns (google.protobuf.Empty) {}
    rpc listBucket (ListBucketRequest) returns (ListBucketResponse) {}
    rpc deleteBucket (DeleteBucketRequest) returns (google.protobuf.Empty) {}
    rpc get (GetRequest) returns (GetResponse) {}
    rpc put (PutRequest) returns (google.protobuf.Empty) {}
    rpc delete (DeleteRequest) returns (google.protobuf.Empty) {}
       
}

message CreateBucketRequest {
    string bucketName = 1;
    // TODO add permissions
    // TODO add location
}

message ListBucketRequest {
    string bucketName = 1;
}

message ListBucketResponse {
    repeated string objectName = 1;
}

message GetRequest {
    string bucketName = 1;
    string objectName = 2;
}

message GetResponse {
    bytes data = 1;
}

message PutRequest {
    string bucketName = 1;
    string objectName = 2;
    bytes data = 3;
}

message DeleteBucketRequest {
    string bucketName = 1;
}

message DeleteRequest {
    string bucketName = 1;
    string objectName = 2;
}