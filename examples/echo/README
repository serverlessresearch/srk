This serves as a "Hello World" for SRK.

# Directory Structure
* echo.py: This is our actual function logic, it can be anything you want as
  long as all of it's dependencies are in the echo/ folder that we pass to
``srk function create -s``
* f.py: This is the open-lambda glue code. OL requires that functions be named
  f() and live in f.py. The signature of f() must be preserved. The body of f()
  does any OL-specific actions and calls echo() with the correct arguments.
* aws.py: This is the aws Lambda glue code. AWS lambda is more flexible with
  function naming, but has an incompatible signature requirement (it includes a
  'context' field that OL doesn't). SRK requires that you include an aws.py
  with a function f(event, context).

# Usage

## Configuration
You should first copy the default config configs/srk.yaml to your user config
at configs/user/srk.yaml. You can then edit that file to configure your
services:
* OpenLambda needs to know where you OL command and working directories are.
* AWS needs to know your role and vpc/security group configurations

You should also set the 'default-provider' to either 'aws' or 'local' (local
uses openlambda).

## Installation
To install to the configured service, run:

    ./srk function create --source examples/echo

## Invocation
This example simply echos back any arguments you pass it. To do a simple
invocation, we will use the 'oneShot' benchmark that simply sends a single
request and prints a single response:

    ./srk bench \
        --bench oneShot \
        --function-args '{"hello" : "world"}' \
        --function-name echo

You should see {"hello" : "world"} printed back to you as the function response.
