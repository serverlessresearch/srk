// Code generated by protoc-gen-go. DO NOT EDIT.
// source: srkproto.proto

package srkproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InstallArg struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallArg) Reset()         { *m = InstallArg{} }
func (m *InstallArg) String() string { return proto.CompactTextString(m) }
func (*InstallArg) ProtoMessage()    {}
func (*InstallArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{0}
}

func (m *InstallArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallArg.Unmarshal(m, b)
}
func (m *InstallArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallArg.Marshal(b, m, deterministic)
}
func (m *InstallArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallArg.Merge(m, src)
}
func (m *InstallArg) XXX_Size() int {
	return xxx_messageInfo_InstallArg.Size(m)
}
func (m *InstallArg) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallArg.DiscardUnknown(m)
}

var xxx_messageInfo_InstallArg proto.InternalMessageInfo

func (m *InstallArg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type InvokeArg struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Function argument (json)
	Farg                 []byte   `protobuf:"bytes,2,opt,name=farg,proto3" json:"farg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeArg) Reset()         { *m = InvokeArg{} }
func (m *InvokeArg) String() string { return proto.CompactTextString(m) }
func (*InvokeArg) ProtoMessage()    {}
func (*InvokeArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{1}
}

func (m *InvokeArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeArg.Unmarshal(m, b)
}
func (m *InvokeArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeArg.Marshal(b, m, deterministic)
}
func (m *InvokeArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeArg.Merge(m, src)
}
func (m *InvokeArg) XXX_Size() int {
	return xxx_messageInfo_InvokeArg.Size(m)
}
func (m *InvokeArg) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeArg.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeArg proto.InternalMessageInfo

func (m *InvokeArg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InvokeArg) GetFarg() []byte {
	if m != nil {
		return m.Farg
	}
	return nil
}

type InvokeRet struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeRet) Reset()         { *m = InvokeRet{} }
func (m *InvokeRet) String() string { return proto.CompactTextString(m) }
func (*InvokeRet) ProtoMessage()    {}
func (*InvokeRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{2}
}

func (m *InvokeRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeRet.Unmarshal(m, b)
}
func (m *InvokeRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeRet.Marshal(b, m, deterministic)
}
func (m *InvokeRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeRet.Merge(m, src)
}
func (m *InvokeRet) XXX_Size() int {
	return xxx_messageInfo_InvokeRet.Size(m)
}
func (m *InvokeRet) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeRet.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeRet proto.InternalMessageInfo

func (m *InvokeRet) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type RemoveArg struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveArg) Reset()         { *m = RemoveArg{} }
func (m *RemoveArg) String() string { return proto.CompactTextString(m) }
func (*RemoveArg) ProtoMessage()    {}
func (*RemoveArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{3}
}

func (m *RemoveArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveArg.Unmarshal(m, b)
}
func (m *RemoveArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveArg.Marshal(b, m, deterministic)
}
func (m *RemoveArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveArg.Merge(m, src)
}
func (m *RemoveArg) XXX_Size() int {
	return xxx_messageInfo_RemoveArg.Size(m)
}
func (m *RemoveArg) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveArg.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveArg proto.InternalMessageInfo

func (m *RemoveArg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Used to send a stream of bytes
type ByteTransfer struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByteTransfer) Reset()         { *m = ByteTransfer{} }
func (m *ByteTransfer) String() string { return proto.CompactTextString(m) }
func (*ByteTransfer) ProtoMessage()    {}
func (*ByteTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{4}
}

func (m *ByteTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByteTransfer.Unmarshal(m, b)
}
func (m *ByteTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByteTransfer.Marshal(b, m, deterministic)
}
func (m *ByteTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByteTransfer.Merge(m, src)
}
func (m *ByteTransfer) XXX_Size() int {
	return xxx_messageInfo_ByteTransfer.Size(m)
}
func (m *ByteTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_ByteTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_ByteTransfer proto.InternalMessageInfo

func (m *ByteTransfer) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

// Nothing to report for now, future versions may include something here
type PackageRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageRet) Reset()         { *m = PackageRet{} }
func (m *PackageRet) String() string { return proto.CompactTextString(m) }
func (*PackageRet) ProtoMessage()    {}
func (*PackageRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{5}
}

func (m *PackageRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageRet.Unmarshal(m, b)
}
func (m *PackageRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageRet.Marshal(b, m, deterministic)
}
func (m *PackageRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageRet.Merge(m, src)
}
func (m *PackageRet) XXX_Size() int {
	return xxx_messageInfo_PackageRet.Size(m)
}
func (m *PackageRet) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageRet.DiscardUnknown(m)
}

var xxx_messageInfo_PackageRet proto.InternalMessageInfo

type InstallRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallRet) Reset()         { *m = InstallRet{} }
func (m *InstallRet) String() string { return proto.CompactTextString(m) }
func (*InstallRet) ProtoMessage()    {}
func (*InstallRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{6}
}

func (m *InstallRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallRet.Unmarshal(m, b)
}
func (m *InstallRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallRet.Marshal(b, m, deterministic)
}
func (m *InstallRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallRet.Merge(m, src)
}
func (m *InstallRet) XXX_Size() int {
	return xxx_messageInfo_InstallRet.Size(m)
}
func (m *InstallRet) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallRet.DiscardUnknown(m)
}

var xxx_messageInfo_InstallRet proto.InternalMessageInfo

type RemoveRet struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRet) Reset()         { *m = RemoveRet{} }
func (m *RemoveRet) String() string { return proto.CompactTextString(m) }
func (*RemoveRet) ProtoMessage()    {}
func (*RemoveRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed494ef91531b9d, []int{7}
}

func (m *RemoveRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRet.Unmarshal(m, b)
}
func (m *RemoveRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRet.Marshal(b, m, deterministic)
}
func (m *RemoveRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRet.Merge(m, src)
}
func (m *RemoveRet) XXX_Size() int {
	return xxx_messageInfo_RemoveRet.Size(m)
}
func (m *RemoveRet) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRet.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRet proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InstallArg)(nil), "srkproto.InstallArg")
	proto.RegisterType((*InvokeArg)(nil), "srkproto.InvokeArg")
	proto.RegisterType((*InvokeRet)(nil), "srkproto.InvokeRet")
	proto.RegisterType((*RemoveArg)(nil), "srkproto.RemoveArg")
	proto.RegisterType((*ByteTransfer)(nil), "srkproto.ByteTransfer")
	proto.RegisterType((*PackageRet)(nil), "srkproto.PackageRet")
	proto.RegisterType((*InstallRet)(nil), "srkproto.InstallRet")
	proto.RegisterType((*RemoveRet)(nil), "srkproto.RemoveRet")
}

func init() {
	proto.RegisterFile("srkproto.proto", fileDescriptor_bed494ef91531b9d)
}

var fileDescriptor_bed494ef91531b9d = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0x3b, 0x31,
	0x10, 0xc5, 0xff, 0xf9, 0xa3, 0xad, 0x1d, 0x17, 0x85, 0xb1, 0x48, 0xd9, 0x8b, 0x4b, 0xf0, 0xb0,
	0xa7, 0x1e, 0xac, 0xe0, 0xc1, 0x93, 0x3d, 0x08, 0xbd, 0x49, 0xf4, 0x0b, 0xc4, 0x75, 0xba, 0x96,
	0x6d, 0x13, 0xc9, 0xa6, 0x0b, 0xfd, 0xdc, 0x7e, 0x01, 0x49, 0x36, 0xbb, 0x0d, 0x2c, 0xbd, 0x84,
	0x99, 0xc7, 0xfb, 0xe5, 0x31, 0x0f, 0xae, 0x6a, 0x53, 0xfd, 0x18, 0x6d, 0xf5, 0xdc, 0xbf, 0x78,
	0xd1, 0xed, 0x3c, 0x03, 0x58, 0xa9, 0xda, 0xca, 0xed, 0xf6, 0xc5, 0x94, 0x88, 0x70, 0xa6, 0xe4,
	0x8e, 0x66, 0x2c, 0x63, 0xf9, 0x44, 0xf8, 0x99, 0x2f, 0x60, 0xb2, 0x52, 0x8d, 0xae, 0xe8, 0x84,
	0xc1, 0x69, 0x6b, 0x69, 0xca, 0xd9, 0xff, 0x8c, 0xe5, 0x89, 0xf0, 0x33, 0xbf, 0xeb, 0x20, 0x41,
	0xd6, 0x19, 0x96, 0xfa, 0xeb, 0xe0, 0xa1, 0x44, 0xf8, 0xd9, 0x19, 0x04, 0xed, 0x74, 0x73, 0xea,
	0x57, 0x7e, 0x0f, 0xc9, 0xf2, 0x60, 0xe9, 0xc3, 0x48, 0x55, 0xaf, 0xc9, 0xe0, 0x14, 0xce, 0x8b,
	0xef, 0xbd, 0xaa, 0xc2, 0x2f, 0xed, 0xc2, 0x13, 0x80, 0x37, 0x59, 0x54, 0xb2, 0x74, 0x41, 0x6e,
	0x0b, 0xc7, 0xb8, 0xed, 0xb2, 0x8b, 0x10, 0x64, 0x1f, 0x7e, 0x19, 0x5c, 0xbf, 0xee, 0x55, 0x61,
	0x37, 0x5a, 0xbd, 0x93, 0x69, 0x36, 0x05, 0xe1, 0x33, 0x8c, 0x03, 0x8c, 0xb7, 0xf3, 0xbe, 0xa1,
	0x38, 0x35, 0x9d, 0x1e, 0xf5, 0x28, 0xe7, 0x5f, 0xce, 0xf0, 0x09, 0xc6, 0x21, 0x0b, 0x23, 0xd3,
	0xb1, 0xcb, 0x74, 0xa8, 0x7a, 0x14, 0x1f, 0x61, 0xd4, 0x56, 0x83, 0x37, 0xb1, 0x23, 0x34, 0x9c,
	0x0e, 0xc4, 0x9e, 0x6a, 0x8f, 0x89, 0xa9, 0xbe, 0xc1, 0x74, 0x20, 0x7a, 0xea, 0x73, 0xe4, 0xa5,
	0xc5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x23, 0xf3, 0x19, 0x00, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FunctionServiceClient is the client API for FunctionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FunctionServiceClient interface {
	// ByteTransfer must represent a tar file with a single top-level directory.
	// The context should include metadata with the following fields:
	// Required: name - the name of the function being packaged
	// Optional: includes - comma-separated list of srk packages to include
	//                      with the function
	Package(ctx context.Context, opts ...grpc.CallOption) (FunctionService_PackageClient, error)
	// Install performs the srk.FaaS.Install operation (see package srk for details)
	Install(ctx context.Context, in *InstallArg, opts ...grpc.CallOption) (*InstallRet, error)
	// Invoke the function once and return the response
	Invoke(ctx context.Context, in *InvokeArg, opts ...grpc.CallOption) (*InvokeRet, error)
	Remove(ctx context.Context, in *RemoveArg, opts ...grpc.CallOption) (*RemoveRet, error)
}

type functionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFunctionServiceClient(cc grpc.ClientConnInterface) FunctionServiceClient {
	return &functionServiceClient{cc}
}

func (c *functionServiceClient) Package(ctx context.Context, opts ...grpc.CallOption) (FunctionService_PackageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FunctionService_serviceDesc.Streams[0], "/srkproto.FunctionService/Package", opts...)
	if err != nil {
		return nil, err
	}
	x := &functionServicePackageClient{stream}
	return x, nil
}

type FunctionService_PackageClient interface {
	Send(*ByteTransfer) error
	CloseAndRecv() (*PackageRet, error)
	grpc.ClientStream
}

type functionServicePackageClient struct {
	grpc.ClientStream
}

func (x *functionServicePackageClient) Send(m *ByteTransfer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *functionServicePackageClient) CloseAndRecv() (*PackageRet, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PackageRet)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *functionServiceClient) Install(ctx context.Context, in *InstallArg, opts ...grpc.CallOption) (*InstallRet, error) {
	out := new(InstallRet)
	err := c.cc.Invoke(ctx, "/srkproto.FunctionService/Install", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *functionServiceClient) Invoke(ctx context.Context, in *InvokeArg, opts ...grpc.CallOption) (*InvokeRet, error) {
	out := new(InvokeRet)
	err := c.cc.Invoke(ctx, "/srkproto.FunctionService/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *functionServiceClient) Remove(ctx context.Context, in *RemoveArg, opts ...grpc.CallOption) (*RemoveRet, error) {
	out := new(RemoveRet)
	err := c.cc.Invoke(ctx, "/srkproto.FunctionService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FunctionServiceServer is the server API for FunctionService service.
type FunctionServiceServer interface {
	// ByteTransfer must represent a tar file with a single top-level directory.
	// The context should include metadata with the following fields:
	// Required: name - the name of the function being packaged
	// Optional: includes - comma-separated list of srk packages to include
	//                      with the function
	Package(FunctionService_PackageServer) error
	// Install performs the srk.FaaS.Install operation (see package srk for details)
	Install(context.Context, *InstallArg) (*InstallRet, error)
	// Invoke the function once and return the response
	Invoke(context.Context, *InvokeArg) (*InvokeRet, error)
	Remove(context.Context, *RemoveArg) (*RemoveRet, error)
}

// UnimplementedFunctionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFunctionServiceServer struct {
}

func (*UnimplementedFunctionServiceServer) Package(srv FunctionService_PackageServer) error {
	return status.Errorf(codes.Unimplemented, "method Package not implemented")
}
func (*UnimplementedFunctionServiceServer) Install(ctx context.Context, req *InstallArg) (*InstallRet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Install not implemented")
}
func (*UnimplementedFunctionServiceServer) Invoke(ctx context.Context, req *InvokeArg) (*InvokeRet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}
func (*UnimplementedFunctionServiceServer) Remove(ctx context.Context, req *RemoveArg) (*RemoveRet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterFunctionServiceServer(s *grpc.Server, srv FunctionServiceServer) {
	s.RegisterService(&_FunctionService_serviceDesc, srv)
}

func _FunctionService_Package_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FunctionServiceServer).Package(&functionServicePackageServer{stream})
}

type FunctionService_PackageServer interface {
	SendAndClose(*PackageRet) error
	Recv() (*ByteTransfer, error)
	grpc.ServerStream
}

type functionServicePackageServer struct {
	grpc.ServerStream
}

func (x *functionServicePackageServer) SendAndClose(m *PackageRet) error {
	return x.ServerStream.SendMsg(m)
}

func (x *functionServicePackageServer) Recv() (*ByteTransfer, error) {
	m := new(ByteTransfer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FunctionService_Install_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FunctionServiceServer).Install(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/srkproto.FunctionService/Install",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FunctionServiceServer).Install(ctx, req.(*InstallArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _FunctionService_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FunctionServiceServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/srkproto.FunctionService/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FunctionServiceServer).Invoke(ctx, req.(*InvokeArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _FunctionService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FunctionServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/srkproto.FunctionService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FunctionServiceServer).Remove(ctx, req.(*RemoveArg))
	}
	return interceptor(ctx, in, info, handler)
}

var _FunctionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "srkproto.FunctionService",
	HandlerType: (*FunctionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Install",
			Handler:    _FunctionService_Install_Handler,
		},
		{
			MethodName: "Invoke",
			Handler:    _FunctionService_Invoke_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _FunctionService_Remove_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Package",
			Handler:       _FunctionService_Package_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "srkproto.proto",
}
